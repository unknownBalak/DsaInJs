You are given an unordered array consisting of consecutive integers  [1, 2, 3, ..., n]
 without any duplicates. You are allowed to swap any two elements. You need to find the 
 minimum number of swaps required to sort the array in ascending order.

For example,arr = [7, 1, 3, 2, 4, 5, 6] 


steps: 
   1) loop through each element of array arr.length using while loop.
   2) define a variable which will store the actual index of arr[i];
                         let newPos = arr[i]-1;
   You would increase index(i) only 
                                   if) it is equal to variable "newPos" 
                                else) We will try to make equal bw newPos and i
                                                how will we do{
                                                    with the help of swapping between two number; 
                                                    And after swapping increate the variable "count" by 1;
                                                } 

function swap(arr,i,j){
    let temp= arr[i];
    arr[i]=arr[j];
    arr[j]=temp;
}

function sort(arr) {
 
  let i=0;
          let newPos = 0;
    while(i<arr.length){
            newPos = arr[i]-1;
            if(i==newPos) i++;
          else {
              swap(arr,i,newPos);
              count++;
          }  
        
    }
return count;

}